{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "id": "-o9G0LxEUMJT"
   },
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import json\n",
    "import nltk\n",
    "from tensorflow.keras.preprocessing.text import Tokenizer\n",
    "from tensorflow.keras.layers import Input,Embedding ,LSTM,Dense ,GlobalMaxPooling1D, Flatten\n",
    "from tensorflow.keras.models import Model\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "lH0c9o_NYKRW",
    "outputId": "b7802d3b-7375-4651-f818-9f47b99a665a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'intents': [{'tag': 'greetings',\n",
       "   'patterns': ['Hello', 'Hi', 'Hey there', 'Greetings', 'Howdy', 'hello   '],\n",
       "   'responses': ['Hello! How may I assist you today?',\n",
       "    'Hi there! What brings you here?',\n",
       "    'Greetings! How can I help you?']},\n",
       "  {'tag': 'farewell',\n",
       "   'patterns': ['Goodbye', 'See you later', 'Bye', 'Take care'],\n",
       "   'responses': ['Goodbye! If you have more questions, feel free to return.',\n",
       "    'See you later! Have a wonderful day.',\n",
       "    'Bye! Come back anytime you need assistance.']},\n",
       "  {'tag': 'gratitude',\n",
       "   'patterns': ['Thanks', 'Thank you', 'Appreciate it', 'Thanks a lot'],\n",
       "   'responses': [\"You're welcome! If you need further help, don't hesitate to ask.\",\n",
       "    'Glad I could assist! If you have more questions, feel free to reach out.',\n",
       "    \"My pleasure! Let me know if there's anything else I can do for you.\"]},\n",
       "  {'tag': 'programs_info',\n",
       "   'patterns': ['What are the major courses offered at SASTRA College?',\n",
       "    'Can you provide information about the different academic programs available at SASTRA College?',\n",
       "    'Tell me about the undergraduate courses offered by SASTRA College.',\n",
       "    'What postgraduate programs does SASTRA College offer?',\n",
       "    'Are there any specialized courses or streams available at SASTRA College?',\n",
       "    \"I'm interested in learning more about the courses in the science department at SASTRA College.\",\n",
       "    'Could you give me details about the professional courses provided by SASTRA College?',\n",
       "    'What are the options for management courses at SASTRA College?',\n",
       "    \"Can you provide information on SASTRA College's engineering programs?\",\n",
       "    \"I'm looking for details on the arts and humanities courses offered at SASTRA College.\"],\n",
       "   'responses': ['  sastra offers various programs including B.Tech, M.Tech, M.Sc., M.C.A., M.B.A., and more. For specific details, you can visit the official website or inquire for more information.']},\n",
       "  {'tag': 'admissions_info',\n",
       "   'patterns': ['How can I apply for admission to SASTRA College?',\n",
       "    'Tell me about the admission process at SASTRA College.',\n",
       "    'What are the eligibility criteria for admission to SASTRA College?',\n",
       "    'Can you provide details on the documents required for admission?',\n",
       "    'Are there any entrance exams for admission to SASTRA College?',\n",
       "    \"I'm interested in B.Tech admissions. What is the procedure?\",\n",
       "    'What is the deadline for submitting the admission application?',\n",
       "    'Can I apply online for admission to SASTRA College?',\n",
       "    'Tell me about the selection criteria for admissions.',\n",
       "    'Are there any special provisions for NRI admissions at SASTRA College?'],\n",
       "   'responses': ['Admissions to B.Tech. and 5-Year Integrated M.Tech. programs are based on JEE-Main and Class XII scores. There are specific streams for admission. For more details, visit the official admission page on the website.']},\n",
       "  {'tag': 'application_process',\n",
       "   'patterns': ['Do I need a separate application for Stream 1 and Stream 2 ?',\n",
       "    'Application submission details based on streams',\n",
       "    'Application submission details based on stream'],\n",
       "   'responses': [\"No, you don't need separate applications for Stream 1 and Stream 2. Use the same application form and provide relevant details for both streams.\"]},\n",
       "  {'tag': 'stream_info',\n",
       "   'patterns': [' Stream 1 and Stream 2?',\n",
       "    'Clarify streams',\n",
       "    'Role of JEE mains and board marks',\n",
       "    'streams',\n",
       "    'stream 1 and stream 2',\n",
       "    'jee mains  admission'],\n",
       "   'responses': ['Stream 1 considers both JEE-Main and Class XII scores, while Stream 2 is solely based on normalized aggregate Class XII score. Both streams have distinct criteria for admission.']},\n",
       "  {'tag': 'eligibility_info',\n",
       "   'patterns': ['What are the eligibility criteria for admission to SASTRA College?',\n",
       "    'Can you provide information on eligibility requirements for SASTRA College?',\n",
       "    'What qualifications are needed for applying to SASTRA College?',\n",
       "    'Are there specific subject requirements for admission?',\n",
       "    'Tell me about the eligibility criteria for B.Tech admissions at SASTRA College.',\n",
       "    'What is the minimum percentage required for admission?',\n",
       "    'Do you consider extracurricular activities in the eligibility criteria?',\n",
       "    'Can you explain the eligibility criteria for international students?',\n",
       "    'Are there any age restrictions for admission to SASTRA College?',\n",
       "    'What documents are required to prove eligibility for admission?'],\n",
       "   'responses': ['Eligibility criteria vary for different programs. For B.Tech, a pass in +2 with specified subjects and a minimum aggregate of 60% is required. Different programs have different eligibility criteria. Visit the official website for details.']},\n",
       "  {'tag': 'nri_admissions',\n",
       "   'patterns': ['Alternate methods for B.Tech. admissions?',\n",
       "    'What are the provisions for NRI admissions at SASTRA College?',\n",
       "    'Can you provide details on the NRI admissions process?',\n",
       "    'Are there any special requirements for NRI students applying to SASTRA College?',\n",
       "    'How does the admission process differ for NRI candidates?',\n",
       "    'Tell me about the documents needed for NRI admissions at SASTRA College.',\n",
       "    'Is there a separate quota for NRI admissions?',\n",
       "    'What is the eligibility criteria for NRI candidates?',\n",
       "    'Can NRI students apply for scholarships or financial aid?',\n",
       "    'Are there specific admission tests for NRI applicants?',\n",
       "    'Do NRI students need to appear for entrance exams for admission?',\n",
       "    'NRI admissions details',\n",
       "    'Process for NRI seats',\n",
       "    'NRI admissions',\n",
       "    'NRI seat',\n",
       "    'nri appliactions',\n",
       "    'about nri'],\n",
       "   'responses': ['Admissions are based on merit for both Stream 1 and Stream 2. NRI admissions are available with provisions. Interested students should contact the Office of Admissions for detailed information.']},\n",
       "  {'tag': 'pg_programs_info',\n",
       "   'patterns': ['How are admissions to M.Tech., M.B.A., and M.C.A. conducted at SASTRA College?',\n",
       "    'Tell me about the admission process for postgraduate programs at SASTRA College.',\n",
       "    'What are the eligibility criteria for M.Tech., M.B.A., and M.C.A. admissions?',\n",
       "    'Can you provide details on the documents required for postgraduate admissions?',\n",
       "    'Are there any specific entrance exams for M.Tech., M.B.A., and M.C.A. admissions?'],\n",
       "   'responses': ['Rolling admissions to these programs are based on qualifying degree/board marks and competitive exam scores such as CAT, XAT, AIMAT, CMAT, AIMCAT for MBA and GATE for M.Tech.']},\n",
       "  {'tag': 'admission_mode',\n",
       "   'patterns': ['Is the application process for SASTRA College online or offline?',\n",
       "    'Can I submit my application to SASTRA College online?',\n",
       "    'Tell me about the mode of application for admission to SASTRA College.',\n",
       "    'Are there any offline application options available for admission?',\n",
       "    'What is the preferred mode of application at SASTRA College?',\n",
       "    'Do I need to visit the campus for the application process?',\n",
       "    'Are there any application fees, and how can I pay them?',\n",
       "    'Can I track the status of my application online?',\n",
       "    'Is there a specific portal for submitting online applications?',\n",
       "    'Are there any advantages to applying online for admission?',\n",
       "    'application process online or offline?',\n",
       "    'Details of the application process',\n",
       "    'online appliaction',\n",
       "    'offline application',\n",
       "    'mode of application',\n",
       "    'method of application',\n",
       "    'online or offline admissions',\n",
       "    'online admissions',\n",
       "    'offline admissions'],\n",
       "   'responses': ['The entire admission process, including application, admission, tuition fee payment, enrollment, and withdrawal, is conducted online. This move aims to reduce the carbon footprint and increase transparency.']},\n",
       "  {'tag': 'contact_info',\n",
       "   'patterns': ['Can you provide general information about SASTRA College?',\n",
       "    'Tell me about the location and campus of SASTRA College.',\n",
       "    'What are the contact details for SASTRA College?',\n",
       "    'Is there an official website for SASTRA College?',\n",
       "    'Provide information about SASTRA College, including its address and phone number.'],\n",
       "   'responses': ['   Deemed University is located in Thanjavur, Tamil Nadu, with an address at Thanjavur 613 401. For more details, contact the General Admission Helpdesk at +91 4362 350011-15 or visit the official website at www.sastra.edu.']},\n",
       "  {'tag': 'ranklist_info',\n",
       "   'patterns': ['ranklist', 'rank details'],\n",
       "   'responses': ['The rank list for admission will be released on June 24, 2023, and will be available at www.sastra.edu. Admissions will commence from June 26, 2023, based on the results. Any changes in dates will be notified on the website.']},\n",
       "  {'tag': 'no_jee_written',\n",
       "   'patterns': ['How is the combined score calculated without JEE (Main)?',\n",
       "    'What are the details for admission without JEE score at SASTRA College?',\n",
       "    \"Can I still get admission if I haven't written JEE (Main)?\",\n",
       "    \"Tell me about the admission process for candidates who haven't taken JEE Main.\",\n",
       "    'What is the weighted score calculation for Stream 1 without JEE (Main)?',\n",
       "    \"Are there any alternative criteria for admission if I didn't write JEE (Main)?\",\n",
       "    'Can I apply to both Stream 1 and Stream 2 without JEE (Main) scores?',\n",
       "    'What weightage is given to Class XII marks if JEE (Main) is not taken?',\n",
       "    \"If I haven't written JEE (Main), how does it affect my chances of admission?\",\n",
       "    \"Is there any flexibility for candidates who didn't appear for JEE (Main) in the admission process?\"],\n",
       "   'responses': [\"If you haven't written JEE (Main), the weighted score for Stream 1 will be 0, but the +2 aggregate will be given 50% weightage. For Stream 2, the weightage for +2 marks will be 100%. You'll be considered in both Stream 1 & Stream 2 by default.\"]},\n",
       "  {'tag': 'nacc_ranking',\n",
       "   'patterns': ['What is the ranking of SASTRA College in India?',\n",
       "    'Tell me about the NAAC rating for SASTRA College.',\n",
       "    'Can you provide information about the overall ranking of SASTRA College?',\n",
       "    'Where does SASTRA College stand in the national college rankings?',\n",
       "    'Provide details on the NAAC rating and overall rank of SASTRA College.'],\n",
       "   'responses': ['According to NAAC, sastra   University has been rated as an A++ university in India with a score of 3.76/4.00.']},\n",
       "  {'tag': 'fee_details',\n",
       "   'patterns': ['What is the fee for LLB at SASTRA College?',\n",
       "    'Can you provide fee details for B.Tech at SASTRA College?',\n",
       "    'Tell me about the fee information for M.Tech at SASTRA College.',\n",
       "    'Provide details on the fee structure for different courses at SASTRA College.',\n",
       "    'What is the fee range for B.A LLB, B.Tech, and M.Tech at SASTRA College?'],\n",
       "   'responses': ['B.A LLB fee is 7 Lakh, B.Tech fee ranges from 4.7 L to 7.7 L, and M.Tech fee varies from 2.8 L to 7.7 L.']},\n",
       "  {'tag': 'branch_admissions',\n",
       "   'patterns': ['how can i get a admission in CSE or cse or ece or eee or it or mechanical or civil or bio technology or bio engnieering?',\n",
       "    'How can I get a seat in the Computer Science and Engineering (CSE) branch at SASTRA College?',\n",
       "    'Tell me about the admission process for the Electronics and Communication Engineering (ECE) branch.',\n",
       "    'What is the admission procedure for the Mechanical Engineering branch at SASTRA College?',\n",
       "    'Can you provide details on how to secure admission in the Information Technology (IT) branch?',\n",
       "    'What are the requirements for getting admission in the Electrical Engineering (EE) branch?',\n",
       "    'Is there a specific rank or score required for admission to the Civil Engineering branch?',\n",
       "    'Tell me about the eligibility criteria for the Chemical Engineering branch at SASTRA College.',\n",
       "    'How are seats allocated in the Computer Science and Engineering (CSE) branch?',\n",
       "    'Are there any specific entrance exams for admission to the Biotechnology branch?',\n",
       "    'What factors are considered for branch allocation during the admission process?',\n",
       "    'Can you provide information on the admission process for the Aerospace Engineering branch?',\n",
       "    'Tell me about the eligibility criteria for the Environmental Engineering branch at SASTRA College.',\n",
       "    'How can I secure admission in the Computer Science and Business Systems branch?',\n",
       "    'What are the requirements for admission to the Artificial Intelligence and Machine Learning branch?',\n",
       "    'Tell me about the admission procedure for the Robotics and Automation Engineering branch at SASTRA College.'],\n",
       "   'responses': ['Admissions to specific branches are based on the rank list. Your branch allocation depends on your rank in the admission process.']},\n",
       "  {'tag': 'visit_campus',\n",
       "   'patterns': ['Can I visit the campus of SASTRA College?',\n",
       "    \"What is the procedure for visiting SASTRA College's campus?\",\n",
       "    \"Tell me about the visitation policy for SASTRA College's campus.\",\n",
       "    'Are there specific visiting hours for the campus of SASTRA College?',\n",
       "    'Can you provide information on the best time to visit the campus of SASTRA College?'],\n",
       "   'responses': [\"You can visit the campus anytime, except during night hours. It's recommended to plan your visit during regular hours for a better experience.\"]},\n",
       "  {'tag': 'alumni_connections',\n",
       "   'patterns': ['connect with alumni ',\n",
       "    'Alumni details',\n",
       "    'aluminis',\n",
       "    'alimini'],\n",
       "   'responses': ['Details of alumni are available on the    website at https://www.  .edu/. You can find contact information and connect with alumni through the provided channels.']},\n",
       "  {'tag': 'branch_sliding',\n",
       "   'patterns': ['How can I slide to other branches or departments at SASTRA College?',\n",
       "    'Tell me about the branch sliding process at SASTRA College.',\n",
       "    'What are the criteria for branch sliding in the first year?',\n",
       "    'Can you provide details on the eligibility for branch sliding?',\n",
       "    'How does the branch sliding process work at SASTRA College?',\n",
       "    'slide to other branches or departments ',\n",
       "    'Branch sliding process',\n",
       "    'sliding process',\n",
       "    'branch sliding'],\n",
       "   'responses': ['Branch sliding is based on your academic performance in the first year. Specific criteria are applied for sliding, and it depends on the availability of seats in the desired branch.']},\n",
       "  {'tag': 'admission_fee',\n",
       "   'patterns': ['What is the admission fee at SASTRA College?',\n",
       "    'Can you provide details about the admission fee structure?',\n",
       "    'Tell me about the fees for admission at SASTRA College.',\n",
       "    'What is the approximate amount for the admission fee?',\n",
       "    'Provide information on how to pay the admission fee at SASTRA College.'],\n",
       "   'responses': ['The admission fee is approximately 600-700 rupees.']},\n",
       "  {'tag': 'campus_area',\n",
       "   'patterns': ['How much area does the college campus cover?',\n",
       "    'Tell me about the total land area of SASTRA College.',\n",
       "    'What is the size of the campus at SASTRA College?',\n",
       "    'Provide information on the area covered by the college premises.',\n",
       "    'Can you share details about the campus size and layout at SASTRA College?'],\n",
       "   'responses': ['The college is spread across approximately 200 acres.']}]}"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "with open(\"final_data.json\") as content:\n",
    "  data1=json.load(content)\n",
    "data1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "x5dRb8AIY-eW",
    "outputId": "0448f3ad-08db-46ba-b313-6db3795e2643"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['greetings', 'greetings', 'greetings', 'greetings', 'greetings', 'greetings', 'farewell', 'farewell', 'farewell', 'farewell', 'gratitude', 'gratitude', 'gratitude', 'gratitude', 'programs_info', 'programs_info', 'programs_info', 'programs_info', 'programs_info', 'programs_info', 'programs_info', 'programs_info', 'programs_info', 'programs_info', 'admissions_info', 'admissions_info', 'admissions_info', 'admissions_info', 'admissions_info', 'admissions_info', 'admissions_info', 'admissions_info', 'admissions_info', 'admissions_info', 'application_process', 'application_process', 'application_process', 'stream_info', 'stream_info', 'stream_info', 'stream_info', 'stream_info', 'stream_info', 'eligibility_info', 'eligibility_info', 'eligibility_info', 'eligibility_info', 'eligibility_info', 'eligibility_info', 'eligibility_info', 'eligibility_info', 'eligibility_info', 'eligibility_info', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'nri_admissions', 'pg_programs_info', 'pg_programs_info', 'pg_programs_info', 'pg_programs_info', 'pg_programs_info', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'admission_mode', 'contact_info', 'contact_info', 'contact_info', 'contact_info', 'contact_info', 'ranklist_info', 'ranklist_info', 'no_jee_written', 'no_jee_written', 'no_jee_written', 'no_jee_written', 'no_jee_written', 'no_jee_written', 'no_jee_written', 'no_jee_written', 'no_jee_written', 'no_jee_written', 'nacc_ranking', 'nacc_ranking', 'nacc_ranking', 'nacc_ranking', 'nacc_ranking', 'fee_details', 'fee_details', 'fee_details', 'fee_details', 'fee_details', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'branch_admissions', 'visit_campus', 'visit_campus', 'visit_campus', 'visit_campus', 'visit_campus', 'alumni_connections', 'alumni_connections', 'alumni_connections', 'alumni_connections', 'branch_sliding', 'branch_sliding', 'branch_sliding', 'branch_sliding', 'branch_sliding', 'branch_sliding', 'branch_sliding', 'branch_sliding', 'branch_sliding', 'admission_fee', 'admission_fee', 'admission_fee', 'admission_fee', 'admission_fee', 'campus_area', 'campus_area', 'campus_area', 'campus_area', 'campus_area']\n",
      "['Hello', 'Hi', 'Hey there', 'Greetings', 'Howdy', 'hello   ', 'Goodbye', 'See you later', 'Bye', 'Take care', 'Thanks', 'Thank you', 'Appreciate it', 'Thanks a lot', 'What are the major courses offered at SASTRA College?', 'Can you provide information about the different academic programs available at SASTRA College?', 'Tell me about the undergraduate courses offered by SASTRA College.', 'What postgraduate programs does SASTRA College offer?', 'Are there any specialized courses or streams available at SASTRA College?', \"I'm interested in learning more about the courses in the science department at SASTRA College.\", 'Could you give me details about the professional courses provided by SASTRA College?', 'What are the options for management courses at SASTRA College?', \"Can you provide information on SASTRA College's engineering programs?\", \"I'm looking for details on the arts and humanities courses offered at SASTRA College.\", 'How can I apply for admission to SASTRA College?', 'Tell me about the admission process at SASTRA College.', 'What are the eligibility criteria for admission to SASTRA College?', 'Can you provide details on the documents required for admission?', 'Are there any entrance exams for admission to SASTRA College?', \"I'm interested in B.Tech admissions. What is the procedure?\", 'What is the deadline for submitting the admission application?', 'Can I apply online for admission to SASTRA College?', 'Tell me about the selection criteria for admissions.', 'Are there any special provisions for NRI admissions at SASTRA College?', 'Do I need a separate application for Stream 1 and Stream 2 ?', 'Application submission details based on streams', 'Application submission details based on stream', ' Stream 1 and Stream 2?', 'Clarify streams', 'Role of JEE mains and board marks', 'streams', 'stream 1 and stream 2', 'jee mains  admission', 'What are the eligibility criteria for admission to SASTRA College?', 'Can you provide information on eligibility requirements for SASTRA College?', 'What qualifications are needed for applying to SASTRA College?', 'Are there specific subject requirements for admission?', 'Tell me about the eligibility criteria for B.Tech admissions at SASTRA College.', 'What is the minimum percentage required for admission?', 'Do you consider extracurricular activities in the eligibility criteria?', 'Can you explain the eligibility criteria for international students?', 'Are there any age restrictions for admission to SASTRA College?', 'What documents are required to prove eligibility for admission?', 'Alternate methods for B.Tech. admissions?', 'What are the provisions for NRI admissions at SASTRA College?', 'Can you provide details on the NRI admissions process?', 'Are there any special requirements for NRI students applying to SASTRA College?', 'How does the admission process differ for NRI candidates?', 'Tell me about the documents needed for NRI admissions at SASTRA College.', 'Is there a separate quota for NRI admissions?', 'What is the eligibility criteria for NRI candidates?', 'Can NRI students apply for scholarships or financial aid?', 'Are there specific admission tests for NRI applicants?', 'Do NRI students need to appear for entrance exams for admission?', 'NRI admissions details', 'Process for NRI seats', 'NRI admissions', 'NRI seat', 'nri appliactions', 'about nri', 'How are admissions to M.Tech., M.B.A., and M.C.A. conducted at SASTRA College?', 'Tell me about the admission process for postgraduate programs at SASTRA College.', 'What are the eligibility criteria for M.Tech., M.B.A., and M.C.A. admissions?', 'Can you provide details on the documents required for postgraduate admissions?', 'Are there any specific entrance exams for M.Tech., M.B.A., and M.C.A. admissions?', 'Is the application process for SASTRA College online or offline?', 'Can I submit my application to SASTRA College online?', 'Tell me about the mode of application for admission to SASTRA College.', 'Are there any offline application options available for admission?', 'What is the preferred mode of application at SASTRA College?', 'Do I need to visit the campus for the application process?', 'Are there any application fees, and how can I pay them?', 'Can I track the status of my application online?', 'Is there a specific portal for submitting online applications?', 'Are there any advantages to applying online for admission?', 'application process online or offline?', 'Details of the application process', 'online appliaction', 'offline application', 'mode of application', 'method of application', 'online or offline admissions', 'online admissions', 'offline admissions', 'Can you provide general information about SASTRA College?', 'Tell me about the location and campus of SASTRA College.', 'What are the contact details for SASTRA College?', 'Is there an official website for SASTRA College?', 'Provide information about SASTRA College, including its address and phone number.', 'ranklist', 'rank details', 'How is the combined score calculated without JEE (Main)?', 'What are the details for admission without JEE score at SASTRA College?', \"Can I still get admission if I haven't written JEE (Main)?\", \"Tell me about the admission process for candidates who haven't taken JEE Main.\", 'What is the weighted score calculation for Stream 1 without JEE (Main)?', \"Are there any alternative criteria for admission if I didn't write JEE (Main)?\", 'Can I apply to both Stream 1 and Stream 2 without JEE (Main) scores?', 'What weightage is given to Class XII marks if JEE (Main) is not taken?', \"If I haven't written JEE (Main), how does it affect my chances of admission?\", \"Is there any flexibility for candidates who didn't appear for JEE (Main) in the admission process?\", 'What is the ranking of SASTRA College in India?', 'Tell me about the NAAC rating for SASTRA College.', 'Can you provide information about the overall ranking of SASTRA College?', 'Where does SASTRA College stand in the national college rankings?', 'Provide details on the NAAC rating and overall rank of SASTRA College.', 'What is the fee for LLB at SASTRA College?', 'Can you provide fee details for B.Tech at SASTRA College?', 'Tell me about the fee information for M.Tech at SASTRA College.', 'Provide details on the fee structure for different courses at SASTRA College.', 'What is the fee range for B.A LLB, B.Tech, and M.Tech at SASTRA College?', 'how can i get a admission in CSE or cse or ece or eee or it or mechanical or civil or bio technology or bio engnieering?', 'How can I get a seat in the Computer Science and Engineering (CSE) branch at SASTRA College?', 'Tell me about the admission process for the Electronics and Communication Engineering (ECE) branch.', 'What is the admission procedure for the Mechanical Engineering branch at SASTRA College?', 'Can you provide details on how to secure admission in the Information Technology (IT) branch?', 'What are the requirements for getting admission in the Electrical Engineering (EE) branch?', 'Is there a specific rank or score required for admission to the Civil Engineering branch?', 'Tell me about the eligibility criteria for the Chemical Engineering branch at SASTRA College.', 'How are seats allocated in the Computer Science and Engineering (CSE) branch?', 'Are there any specific entrance exams for admission to the Biotechnology branch?', 'What factors are considered for branch allocation during the admission process?', 'Can you provide information on the admission process for the Aerospace Engineering branch?', 'Tell me about the eligibility criteria for the Environmental Engineering branch at SASTRA College.', 'How can I secure admission in the Computer Science and Business Systems branch?', 'What are the requirements for admission to the Artificial Intelligence and Machine Learning branch?', 'Tell me about the admission procedure for the Robotics and Automation Engineering branch at SASTRA College.', 'Can I visit the campus of SASTRA College?', \"What is the procedure for visiting SASTRA College's campus?\", \"Tell me about the visitation policy for SASTRA College's campus.\", 'Are there specific visiting hours for the campus of SASTRA College?', 'Can you provide information on the best time to visit the campus of SASTRA College?', 'connect with alumni ', 'Alumni details', 'aluminis', 'alimini', 'How can I slide to other branches or departments at SASTRA College?', 'Tell me about the branch sliding process at SASTRA College.', 'What are the criteria for branch sliding in the first year?', 'Can you provide details on the eligibility for branch sliding?', 'How does the branch sliding process work at SASTRA College?', 'slide to other branches or departments ', 'Branch sliding process', 'sliding process', 'branch sliding', 'What is the admission fee at SASTRA College?', 'Can you provide details about the admission fee structure?', 'Tell me about the fees for admission at SASTRA College.', 'What is the approximate amount for the admission fee?', 'Provide information on how to pay the admission fee at SASTRA College.', 'How much area does the college campus cover?', 'Tell me about the total land area of SASTRA College.', 'What is the size of the campus at SASTRA College?', 'Provide information on the area covered by the college premises.', 'Can you share details about the campus size and layout at SASTRA College?']\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "{'greetings': ['Hello! How may I assist you today?',\n",
       "  'Hi there! What brings you here?',\n",
       "  'Greetings! How can I help you?'],\n",
       " 'farewell': ['Goodbye! If you have more questions, feel free to return.',\n",
       "  'See you later! Have a wonderful day.',\n",
       "  'Bye! Come back anytime you need assistance.'],\n",
       " 'gratitude': [\"You're welcome! If you need further help, don't hesitate to ask.\",\n",
       "  'Glad I could assist! If you have more questions, feel free to reach out.',\n",
       "  \"My pleasure! Let me know if there's anything else I can do for you.\"],\n",
       " 'programs_info': ['  sastra offers various programs including B.Tech, M.Tech, M.Sc., M.C.A., M.B.A., and more. For specific details, you can visit the official website or inquire for more information.'],\n",
       " 'admissions_info': ['Admissions to B.Tech. and 5-Year Integrated M.Tech. programs are based on JEE-Main and Class XII scores. There are specific streams for admission. For more details, visit the official admission page on the website.'],\n",
       " 'application_process': [\"No, you don't need separate applications for Stream 1 and Stream 2. Use the same application form and provide relevant details for both streams.\"],\n",
       " 'stream_info': ['Stream 1 considers both JEE-Main and Class XII scores, while Stream 2 is solely based on normalized aggregate Class XII score. Both streams have distinct criteria for admission.'],\n",
       " 'eligibility_info': ['Eligibility criteria vary for different programs. For B.Tech, a pass in +2 with specified subjects and a minimum aggregate of 60% is required. Different programs have different eligibility criteria. Visit the official website for details.'],\n",
       " 'nri_admissions': ['Admissions are based on merit for both Stream 1 and Stream 2. NRI admissions are available with provisions. Interested students should contact the Office of Admissions for detailed information.'],\n",
       " 'pg_programs_info': ['Rolling admissions to these programs are based on qualifying degree/board marks and competitive exam scores such as CAT, XAT, AIMAT, CMAT, AIMCAT for MBA and GATE for M.Tech.'],\n",
       " 'admission_mode': ['The entire admission process, including application, admission, tuition fee payment, enrollment, and withdrawal, is conducted online. This move aims to reduce the carbon footprint and increase transparency.'],\n",
       " 'contact_info': ['   Deemed University is located in Thanjavur, Tamil Nadu, with an address at Thanjavur 613 401. For more details, contact the General Admission Helpdesk at +91 4362 350011-15 or visit the official website at www.sastra.edu.'],\n",
       " 'ranklist_info': ['The rank list for admission will be released on June 24, 2023, and will be available at www.sastra.edu. Admissions will commence from June 26, 2023, based on the results. Any changes in dates will be notified on the website.'],\n",
       " 'no_jee_written': [\"If you haven't written JEE (Main), the weighted score for Stream 1 will be 0, but the +2 aggregate will be given 50% weightage. For Stream 2, the weightage for +2 marks will be 100%. You'll be considered in both Stream 1 & Stream 2 by default.\"],\n",
       " 'nacc_ranking': ['According to NAAC, sastra   University has been rated as an A++ university in India with a score of 3.76/4.00.'],\n",
       " 'fee_details': ['B.A LLB fee is 7 Lakh, B.Tech fee ranges from 4.7 L to 7.7 L, and M.Tech fee varies from 2.8 L to 7.7 L.'],\n",
       " 'branch_admissions': ['Admissions to specific branches are based on the rank list. Your branch allocation depends on your rank in the admission process.'],\n",
       " 'visit_campus': [\"You can visit the campus anytime, except during night hours. It's recommended to plan your visit during regular hours for a better experience.\"],\n",
       " 'alumni_connections': ['Details of alumni are available on the    website at https://www.  .edu/. You can find contact information and connect with alumni through the provided channels.'],\n",
       " 'branch_sliding': ['Branch sliding is based on your academic performance in the first year. Specific criteria are applied for sliding, and it depends on the availability of seats in the desired branch.'],\n",
       " 'admission_fee': ['The admission fee is approximately 600-700 rupees.'],\n",
       " 'campus_area': ['The college is spread across approximately 200 acres.']}"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tags=[]\n",
    "inputs=[]\n",
    "responses={}\n",
    "for intent in data1['intents']:\n",
    "  responses[intent['tag']]=intent['responses']\n",
    "  for lines in intent['patterns']:\n",
    "    inputs.append(lines)\n",
    "    tags.append(intent['tag'])\n",
    "print(tags)\n",
    "print(inputs)\n",
    "responses"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 423
    },
    "id": "lZLKQIurZtLY",
    "outputId": "35f5505b-60c6-4218-b6c7-525b864b1deb"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>inputs</th>\n",
       "      <th>tags</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Hello</td>\n",
       "      <td>greetings</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Hi</td>\n",
       "      <td>greetings</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hey there</td>\n",
       "      <td>greetings</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Greetings</td>\n",
       "      <td>greetings</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Howdy</td>\n",
       "      <td>greetings</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>How much area does the college campus cover?</td>\n",
       "      <td>campus_area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>Tell me about the total land area of SASTRA Co...</td>\n",
       "      <td>campus_area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>What is the size of the campus at SASTRA College?</td>\n",
       "      <td>campus_area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>Provide information on the area covered by the...</td>\n",
       "      <td>campus_area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>Can you share details about the campus size an...</td>\n",
       "      <td>campus_area</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>165 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                inputs         tags\n",
       "0                                                Hello    greetings\n",
       "1                                                   Hi    greetings\n",
       "2                                            Hey there    greetings\n",
       "3                                            Greetings    greetings\n",
       "4                                                Howdy    greetings\n",
       "..                                                 ...          ...\n",
       "160       How much area does the college campus cover?  campus_area\n",
       "161  Tell me about the total land area of SASTRA Co...  campus_area\n",
       "162  What is the size of the campus at SASTRA College?  campus_area\n",
       "163  Provide information on the area covered by the...  campus_area\n",
       "164  Can you share details about the campus size an...  campus_area\n",
       "\n",
       "[165 rows x 2 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.DataFrame({\"inputs\":inputs,\n",
    "                    \"tags\":tags})\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "id": "V8v9Kt8Aa9FS"
   },
   "outputs": [],
   "source": [
    "import string\n",
    "data['inputs']=data[\"inputs\"].apply(lambda wrd:[ltrs.lower() for ltrs in wrd if ltrs not in string.punctuation])\n",
    "data['inputs']=data['inputs'].apply(lambda wrd:''.join(wrd))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 423
    },
    "id": "qdu8X0qCb-eo",
    "outputId": "fbd9cdce-4b3d-4538-ea5d-242538ce49cd"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>inputs</th>\n",
       "      <th>tags</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Hello</td>\n",
       "      <td>greetings</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Hi</td>\n",
       "      <td>greetings</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hey there</td>\n",
       "      <td>greetings</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Greetings</td>\n",
       "      <td>greetings</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Howdy</td>\n",
       "      <td>greetings</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>How much area does the college campus cover?</td>\n",
       "      <td>campus_area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>Tell me about the total land area of SASTRA Co...</td>\n",
       "      <td>campus_area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>What is the size of the campus at SASTRA College?</td>\n",
       "      <td>campus_area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>Provide information on the area covered by the...</td>\n",
       "      <td>campus_area</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>Can you share details about the campus size an...</td>\n",
       "      <td>campus_area</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>165 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                inputs         tags\n",
       "0                                                Hello    greetings\n",
       "1                                                   Hi    greetings\n",
       "2                                            Hey there    greetings\n",
       "3                                            Greetings    greetings\n",
       "4                                                Howdy    greetings\n",
       "..                                                 ...          ...\n",
       "160       How much area does the college campus cover?  campus_area\n",
       "161  Tell me about the total land area of SASTRA Co...  campus_area\n",
       "162  What is the size of the campus at SASTRA College?  campus_area\n",
       "163  Provide information on the area covered by the...  campus_area\n",
       "164  Can you share details about the campus size an...  campus_area\n",
       "\n",
       "[165 rows x 2 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "id": "x5-POjYydYIT",
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[88], [131], [132, 15], [133], [134], [88], [135], [136, 16, 137], [138], [139, 140], [89], [141, 16], [142, 54], [89, 30, 143], [7, 8, 1, 144, 46, 71, 6, 3, 4], [9, 16, 19, 32, 10, 1, 90, 145, 55, 72, 6, 3, 4], [20, 17, 10, 1, 146, 46, 71, 73, 3, 4], [7, 74, 55, 49, 3, 4, 147], [8, 15, 33, 148, 46, 27, 56, 72, 6, 3, 4], [75, 91, 31, 92, 149, 10, 1, 46, 31, 1, 57, 150, 6, 3, 4], [151, 16, 152, 17, 18, 10, 1, 153, 46, 154, 73, 3, 4], [7, 8, 1, 93, 2, 155, 46, 6, 3, 4], [9, 16, 19, 32, 28, 3, 76, 37, 55], [75, 156, 2, 18, 28, 1, 157, 13, 158, 46, 71, 6, 3, 4], [29, 9, 23, 58, 2, 5, 11, 3, 4], [20, 17, 10, 1, 5, 21, 6, 3, 4], [7, 8, 1, 34, 35, 2, 5, 11, 3, 4], [9, 16, 19, 18, 28, 1, 59, 51, 2, 5], [8, 15, 33, 60, 61, 2, 5, 11, 3, 4], [75, 91, 31, 43, 39, 22, 7, 12, 1, 62], [7, 12, 1, 159, 2, 94, 1, 5, 24], [9, 23, 58, 40, 2, 5, 11, 3, 4], [20, 17, 10, 1, 160, 35, 2, 22], [8, 15, 33, 95, 96, 2, 25, 22, 6, 3, 4], [63, 23, 77, 30, 97, 24, 2, 41, 52, 13, 41, 64], [24, 98, 18, 99, 28, 56], [24, 98, 18, 99, 28, 41], [41, 52, 13, 41, 64], [161, 56], [162, 26, 36, 100, 13, 163, 101], [56], [41, 52, 13, 41, 64], [36, 100, 5], [7, 8, 1, 34, 35, 2, 5, 11, 3, 4], [9, 16, 19, 32, 28, 34, 53, 2, 3, 4], [7, 164, 8, 102, 2, 78, 11, 3, 4], [8, 15, 47, 165, 53, 2, 5], [20, 17, 10, 1, 34, 35, 2, 43, 39, 22, 6, 3, 4], [7, 12, 1, 166, 167, 51, 2, 5], [63, 16, 168, 169, 170, 31, 1, 34, 35], [9, 16, 171, 1, 34, 35, 2, 172, 65], [8, 15, 33, 173, 174, 2, 5, 11, 3, 4], [7, 59, 8, 51, 11, 175, 34, 2, 5], [176, 177, 2, 43, 39, 22], [7, 8, 1, 96, 2, 25, 22, 6, 3, 4], [9, 16, 19, 18, 28, 1, 25, 22, 21], [8, 15, 33, 95, 53, 2, 25, 65, 78, 11, 3, 4], [29, 49, 1, 5, 21, 178, 2, 25, 66], [20, 17, 10, 1, 59, 102, 2, 25, 22, 6, 3, 4], [12, 15, 30, 97, 179, 2, 25, 22], [7, 12, 1, 34, 35, 2, 25, 66], [9, 25, 65, 58, 2, 180, 27, 181, 182], [8, 15, 47, 5, 183, 2, 25, 184], [63, 25, 65, 77, 11, 103, 2, 60, 61, 2, 5], [25, 22, 18], [21, 2, 25, 104], [25, 22], [25, 105], [25, 185], [10, 25], [29, 8, 22, 11, 38, 39, 38, 43, 30, 13, 38, 79, 30, 186, 6, 3, 4], [20, 17, 10, 1, 5, 21, 2, 74, 55, 6, 3, 4], [7, 8, 1, 34, 35, 2, 38, 39, 38, 43, 30, 13, 38, 79, 30, 22], [9, 16, 19, 18, 28, 1, 59, 51, 2, 74, 22], [8, 15, 33, 47, 60, 61, 2, 38, 39, 38, 43, 30, 13, 38, 79, 30, 22], [12, 1, 24, 21, 2, 3, 4, 40, 27, 50], [9, 23, 187, 80, 24, 11, 3, 4, 40], [20, 17, 10, 1, 81, 26, 24, 2, 5, 11, 3, 4], [8, 15, 33, 50, 24, 93, 72, 2, 5], [7, 12, 1, 188, 81, 26, 24, 6, 3, 4], [63, 23, 77, 11, 82, 1, 42, 2, 1, 24, 21], [8, 15, 33, 24, 106, 13, 29, 9, 23, 107, 189], [9, 23, 190, 1, 191, 26, 80, 24, 40], [12, 15, 30, 47, 192, 2, 94, 40, 193], [8, 15, 33, 194, 11, 78, 40, 2, 5], [24, 21, 40, 27, 50], [18, 26, 1, 24, 21], [40, 195], [50, 24], [81, 26, 24], [196, 26, 24], [40, 27, 50, 22], [40, 22], [50, 22], [9, 16, 19, 197, 32, 10, 3, 4], [20, 17, 10, 1, 198, 13, 42, 26, 3, 4], [7, 8, 1, 199, 18, 2, 3, 4], [12, 15, 200, 201, 202, 2, 3, 4], [19, 32, 10, 3, 4, 203, 204, 205, 13, 206, 207], [208], [83, 18], [29, 12, 1, 209, 67, 210, 68, 36, 44], [7, 8, 1, 18, 2, 5, 68, 36, 67, 6, 3, 4], [9, 23, 211, 84, 5, 69, 23, 85, 108, 36, 44], [20, 17, 10, 1, 5, 21, 2, 66, 109, 85, 110, 36, 44], [7, 12, 1, 212, 67, 213, 2, 41, 52, 68, 36, 44], [8, 15, 33, 214, 35, 2, 5, 69, 23, 111, 215, 36, 44], [9, 23, 58, 11, 216, 41, 52, 13, 41, 64, 68, 36, 44, 217], [7, 218, 12, 219, 11, 220, 221, 101, 69, 36, 44, 12, 222, 110], [69, 23, 85, 108, 36, 44, 29, 49, 54, 223, 80, 224, 26, 5], [12, 15, 33, 225, 2, 66, 109, 111, 103, 2, 36, 44, 31, 1, 5, 21], [7, 12, 1, 112, 26, 3, 4, 31, 226], [20, 17, 10, 1, 113, 114, 2, 3, 4], [9, 16, 19, 32, 10, 1, 115, 112, 26, 3, 4], [227, 49, 3, 4, 228, 31, 1, 229, 4, 230], [19, 18, 28, 1, 113, 114, 13, 115, 83, 26, 3, 4], [7, 12, 1, 45, 2, 116, 6, 3, 4], [9, 16, 19, 45, 18, 2, 43, 39, 6, 3, 4], [20, 17, 10, 1, 45, 32, 2, 38, 39, 6, 3, 4], [19, 18, 28, 1, 45, 117, 2, 90, 46, 6, 3, 4], [7, 12, 1, 45, 231, 2, 43, 30, 116, 43, 39, 13, 38, 39, 6, 3, 4], [29, 9, 23, 84, 30, 5, 31, 70, 27, 70, 27, 118, 27, 232, 27, 54, 27, 119, 27, 120, 27, 121, 122, 27, 121, 233], [29, 9, 23, 84, 30, 105, 31, 1, 86, 57, 13, 37, 70, 14, 6, 3, 4], [20, 17, 10, 1, 5, 21, 2, 1, 234, 13, 235, 37, 118, 14], [7, 12, 1, 5, 62, 2, 1, 119, 37, 14, 6, 3, 4], [9, 16, 19, 18, 28, 29, 11, 123, 5, 31, 1, 32, 122, 54, 14], [7, 8, 1, 53, 2, 236, 5, 31, 1, 237, 37, 238, 14], [12, 15, 30, 47, 83, 27, 67, 51, 2, 5, 11, 1, 120, 37, 14], [20, 17, 10, 1, 34, 35, 2, 1, 239, 37, 14, 6, 3, 4], [29, 8, 104, 240, 31, 1, 86, 57, 13, 37, 70, 14], [8, 15, 33, 47, 60, 61, 2, 5, 11, 1, 241, 14], [7, 242, 8, 243, 2, 14, 244, 245, 1, 5, 21], [9, 16, 19, 32, 28, 1, 5, 21, 2, 1, 246, 37, 14], [20, 17, 10, 1, 34, 35, 2, 1, 247, 37, 14, 6, 3, 4], [29, 9, 23, 123, 5, 31, 1, 86, 57, 13, 248, 249, 14], [7, 8, 1, 53, 2, 5, 11, 1, 250, 251, 13, 252, 92, 14], [20, 17, 10, 1, 5, 62, 2, 1, 253, 13, 254, 37, 14, 6, 3, 4], [9, 23, 82, 1, 42, 26, 3, 4], [7, 12, 1, 62, 2, 124, 3, 76, 42], [20, 17, 10, 1, 255, 256, 2, 3, 76, 42], [8, 15, 47, 124, 257, 2, 1, 42, 26, 3, 4], [9, 16, 19, 32, 28, 1, 258, 259, 11, 82, 1, 42, 26, 3, 4], [260, 261, 125], [125, 18], [262], [263], [29, 9, 23, 126, 11, 127, 128, 27, 129, 6, 3, 4], [20, 17, 10, 1, 14, 48, 21, 6, 3, 4], [7, 8, 1, 35, 2, 14, 48, 31, 1, 264, 265], [9, 16, 19, 18, 28, 1, 34, 2, 14, 48], [29, 49, 1, 14, 48, 21, 266, 6, 3, 4], [126, 11, 127, 128, 27, 129], [14, 48, 21], [48, 21], [14, 48], [7, 12, 1, 5, 45, 6, 3, 4], [9, 16, 19, 18, 10, 1, 5, 45, 117], [20, 17, 10, 1, 106, 2, 5, 6, 3, 4], [7, 12, 1, 267, 268, 2, 1, 5, 45], [19, 32, 28, 29, 11, 107, 1, 5, 45, 6, 3, 4], [29, 269, 87, 49, 1, 4, 42, 270], [20, 17, 10, 1, 271, 272, 87, 26, 3, 4], [7, 12, 1, 130, 26, 1, 42, 6, 3, 4], [19, 32, 28, 1, 87, 273, 73, 1, 4, 274], [9, 16, 275, 18, 10, 1, 42, 130, 13, 276, 6, 3, 4]]\n"
     ]
    }
   ],
   "source": [
    "tokenizer=Tokenizer(num_words=2000)\n",
    "tokenizer.fit_on_texts(data['inputs'])\n",
    "tokenizer.word_index['collage']=tokenizer.word_index['sastra']\n",
    "tokenizer.word_index['university']=tokenizer.word_index['sastra']\n",
    "train=tokenizer.texts_to_sequences(data['inputs'])\n",
    "print(train)   \n",
    "from tensorflow.keras.preprocessing.sequence import pad_sequences\n",
    "x_train=pad_sequences(train)\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "le=LabelEncoder()\n",
    "y_train = le.fit_transform(data['tags'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "gMsAYGqCenpf",
    "outputId": "55eb4607-c0ae-41a0-a5c2-0b664929fd1e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "26\n"
     ]
    }
   ],
   "source": [
    "input_shape=x_train.shape[1]\n",
    "print(input_shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[100],\n",
       " [139],\n",
       " [140, 18],\n",
       " [141],\n",
       " [142],\n",
       " [100],\n",
       " [143],\n",
       " [144, 19, 145],\n",
       " [146],\n",
       " [147, 148],\n",
       " [101],\n",
       " [149, 19],\n",
       " [150, 45],\n",
       " [101, 42, 151],\n",
       " [7, 8, 1, 152, 43, 79, 6, 4, 3],\n",
       " [9, 19, 22, 32, 10, 1, 102, 153, 58, 80, 6, 4, 3],\n",
       " [23, 20, 10, 1, 154, 43, 79, 81, 4, 3],\n",
       " [7, 82, 58, 49, 4, 3, 155],\n",
       " [8, 18, 33, 156, 43, 12, 59, 80, 6, 4, 3],\n",
       " [83, 103, 28, 104, 157, 10, 1, 43, 28, 1, 60, 158, 6, 4, 3],\n",
       " [159, 19, 160, 20, 16, 10, 1, 161, 43, 162, 81, 4, 3],\n",
       " [7, 8, 1, 105, 2, 163, 43, 6, 4, 3],\n",
       " [9, 19, 22, 32, 29, 4, 84, 38, 58],\n",
       " [83, 164, 2, 16, 29, 1, 165, 17, 166, 43, 79, 6, 4, 3],\n",
       " [31, 9, 30, 61, 2, 5, 11, 4, 3],\n",
       " [23, 20, 10, 1, 5, 24, 6, 4, 3],\n",
       " [7, 8, 1, 34, 35, 2, 5, 11, 4, 3],\n",
       " [9, 19, 22, 16, 29, 1, 62, 54, 2, 5],\n",
       " [8, 18, 33, 63, 64, 2, 5, 11, 4, 3],\n",
       " [83, 103, 28, 50, 13, 7, 14, 1, 65],\n",
       " [7, 14, 1, 167, 2, 106, 1, 5, 26],\n",
       " [9, 30, 61, 39, 2, 5, 11, 4, 3],\n",
       " [23, 20, 10, 1, 168, 35, 2, 13],\n",
       " [8, 18, 33, 107, 108, 2, 27, 13, 6, 4, 3],\n",
       " [66, 30, 85, 42, 109, 26, 2, 40, 55, 17, 40, 67],\n",
       " [26, 110, 16, 111, 29, 59],\n",
       " [26, 110, 16, 111, 29, 40],\n",
       " [40, 55, 17, 40, 67],\n",
       " [169, 59],\n",
       " [170, 21, 36, 112, 17, 171, 113],\n",
       " [59],\n",
       " [40, 55, 17, 40, 67],\n",
       " [36, 112, 5],\n",
       " [7, 8, 1, 34, 35, 2, 5, 11, 4, 3],\n",
       " [9, 19, 22, 32, 29, 34, 56, 2, 4, 3],\n",
       " [7, 172, 8, 114, 2, 86, 11, 4, 3],\n",
       " [8, 18, 46, 173, 56, 2, 5],\n",
       " [23, 20, 10, 1, 34, 35, 2, 50, 13, 6, 4, 3],\n",
       " [7, 14, 1, 174, 175, 54, 2, 5],\n",
       " [66, 19, 176, 177, 178, 28, 1, 34, 35],\n",
       " [9, 19, 179, 1, 34, 35, 2, 180, 68],\n",
       " [8, 18, 33, 181, 182, 2, 5, 11, 4, 3],\n",
       " [7, 62, 8, 54, 11, 183, 34, 2, 5],\n",
       " [184, 185, 2, 50, 13],\n",
       " [7, 8, 1, 108, 2, 27, 13, 6, 4, 3],\n",
       " [9, 19, 22, 16, 29, 1, 27, 13, 24],\n",
       " [8, 18, 33, 107, 56, 2, 27, 68, 86, 11, 4, 3],\n",
       " [31, 49, 1, 5, 24, 186, 2, 27, 69],\n",
       " [23, 20, 10, 1, 62, 114, 2, 27, 13, 6, 4, 3],\n",
       " [14, 18, 42, 109, 187, 2, 27, 13],\n",
       " [7, 14, 1, 34, 35, 2, 27, 69],\n",
       " [9, 27, 68, 61, 2, 188, 12, 189, 190],\n",
       " [8, 18, 46, 5, 191, 2, 27, 192],\n",
       " [66, 27, 68, 85, 11, 115, 2, 63, 64, 2, 5],\n",
       " [27, 13, 16],\n",
       " [24, 2, 27, 116],\n",
       " [27, 13],\n",
       " [27, 70],\n",
       " [27, 193],\n",
       " [10, 27],\n",
       " [31, 8, 13, 11, 51, 87, 17, 88, 194, 6, 4, 3],\n",
       " [23, 20, 10, 1, 5, 24, 2, 82, 58, 6, 4, 3],\n",
       " [7, 8, 1, 34, 35, 2, 51, 87, 17, 88, 13],\n",
       " [9, 19, 22, 16, 29, 1, 62, 54, 2, 82, 13],\n",
       " [8, 18, 33, 46, 63, 64, 2, 51, 87, 17, 88, 13],\n",
       " [14, 1, 26, 24, 2, 4, 3, 39, 12, 52],\n",
       " [9, 30, 195, 89, 26, 11, 4, 3, 39],\n",
       " [23, 20, 10, 1, 90, 21, 26, 2, 5, 11, 4, 3],\n",
       " [8, 18, 33, 52, 26, 105, 80, 2, 5],\n",
       " [7, 14, 1, 196, 90, 21, 26, 6, 4, 3],\n",
       " [66, 30, 85, 11, 47, 1, 37, 2, 1, 26, 24],\n",
       " [8, 18, 33, 26, 117, 17, 31, 9, 30, 118, 197],\n",
       " [9, 30, 198, 1, 199, 21, 89, 26, 39],\n",
       " [14, 18, 42, 46, 200, 2, 106, 39, 201],\n",
       " [8, 18, 33, 202, 11, 86, 39, 2, 5],\n",
       " [26, 24, 39, 12, 52],\n",
       " [16, 21, 1, 26, 24],\n",
       " [39, 203],\n",
       " [52, 26],\n",
       " [90, 21, 26],\n",
       " [204, 21, 26],\n",
       " [39, 12, 52, 13],\n",
       " [39, 13],\n",
       " [52, 13],\n",
       " [9, 19, 22, 205, 32, 10, 4, 3],\n",
       " [23, 20, 10, 1, 206, 17, 37, 21, 4, 3],\n",
       " [7, 8, 1, 207, 16, 2, 4, 3],\n",
       " [14, 18, 208, 209, 210, 2, 4, 3],\n",
       " [22, 32, 10, 4, 3, 211, 212, 213, 17, 214, 215],\n",
       " [216],\n",
       " [53, 16],\n",
       " [31, 14, 1, 217, 71, 218, 72, 36, 41],\n",
       " [7, 8, 1, 16, 2, 5, 72, 36, 71, 6, 4, 3],\n",
       " [9, 30, 219, 73, 5, 74, 30, 91, 119, 36, 41],\n",
       " [23, 20, 10, 1, 5, 24, 2, 69, 120, 91, 121, 36, 41],\n",
       " [7, 14, 1, 220, 71, 221, 2, 40, 55, 72, 36, 41],\n",
       " [8, 18, 33, 222, 35, 2, 5, 74, 30, 122, 223, 36, 41],\n",
       " [9, 30, 61, 11, 224, 40, 55, 17, 40, 67, 72, 36, 41, 225],\n",
       " [7, 226, 14, 227, 11, 228, 229, 113, 74, 36, 41, 14, 230, 121],\n",
       " [74, 30, 91, 119, 36, 41, 31, 49, 45, 231, 89, 232, 21, 5],\n",
       " [14, 18, 33, 233, 2, 69, 120, 122, 115, 2, 36, 41, 28, 1, 5, 24],\n",
       " [92, 28, 123],\n",
       " [75, 93],\n",
       " [3, 53],\n",
       " [4, 53],\n",
       " [75, 53],\n",
       " [7, 14, 1, 92, 21, 4, 3, 28, 123],\n",
       " [23, 20, 10, 1, 75, 93, 2, 4, 3],\n",
       " [9, 19, 22, 32, 10, 1, 125, 92, 21, 4, 3],\n",
       " [234, 49, 4, 3, 235, 28, 1, 236, 3, 237],\n",
       " [22, 16, 29, 1, 75, 93, 17, 125, 53, 21, 4, 3],\n",
       " [25, 2, 94],\n",
       " [50, 25],\n",
       " [51, 25, 32],\n",
       " [25],\n",
       " [4, 25],\n",
       " [238, 25],\n",
       " [7, 14, 1, 25, 2, 94, 6, 4, 3],\n",
       " [9, 19, 22, 25, 16, 2, 50, 6, 4, 3],\n",
       " [23, 20, 10, 1, 25, 32, 2, 51, 6, 4, 3],\n",
       " [22, 16, 29, 1, 25, 126, 2, 102, 43, 6, 4, 3],\n",
       " [7, 14, 1, 25, 239, 2, 240, 94, 50, 17, 51, 6, 4, 3],\n",
       " [70, 241, 44],\n",
       " [5, 24, 2, 45],\n",
       " [57, 15, 5, 16],\n",
       " [44, 13],\n",
       " [45, 13],\n",
       " [57, 13],\n",
       " [77, 13],\n",
       " [95, 13],\n",
       " [73,\n",
       "  42,\n",
       "  70,\n",
       "  28,\n",
       "  44,\n",
       "  12,\n",
       "  44,\n",
       "  12,\n",
       "  77,\n",
       "  12,\n",
       "  95,\n",
       "  12,\n",
       "  45,\n",
       "  12,\n",
       "  57,\n",
       "  12,\n",
       "  96,\n",
       "  12,\n",
       "  78,\n",
       "  97,\n",
       "  12,\n",
       "  78,\n",
       "  127],\n",
       " [73,\n",
       "  42,\n",
       "  5,\n",
       "  28,\n",
       "  44,\n",
       "  12,\n",
       "  44,\n",
       "  12,\n",
       "  77,\n",
       "  12,\n",
       "  95,\n",
       "  12,\n",
       "  45,\n",
       "  12,\n",
       "  57,\n",
       "  12,\n",
       "  96,\n",
       "  12,\n",
       "  78,\n",
       "  97,\n",
       "  12,\n",
       "  78,\n",
       "  127],\n",
       " [31, 9, 30, 73, 42, 70, 28, 1, 98, 60, 17, 38, 44, 15, 6, 4, 3],\n",
       " [23, 20, 10, 1, 5, 24, 2, 1, 242, 17, 243, 38, 77, 15],\n",
       " [7, 14, 1, 5, 65, 2, 1, 57, 38, 15, 6, 4, 3],\n",
       " [9, 19, 22, 16, 29, 31, 11, 128, 5, 28, 1, 32, 97, 45, 15],\n",
       " [7, 8, 1, 56, 2, 244, 5, 28, 1, 245, 38, 246, 15],\n",
       " [14, 18, 42, 46, 53, 12, 71, 54, 2, 5, 11, 1, 96, 38, 15],\n",
       " [23, 20, 10, 1, 34, 35, 2, 1, 247, 38, 15, 6, 4, 3],\n",
       " [31, 8, 116, 248, 28, 1, 98, 60, 17, 38, 44, 15],\n",
       " [8, 18, 33, 46, 63, 64, 2, 5, 11, 1, 249, 15],\n",
       " [7, 250, 8, 251, 2, 15, 252, 253, 1, 5, 24],\n",
       " [9, 19, 22, 32, 29, 1, 5, 24, 2, 1, 254, 38, 15],\n",
       " [23, 20, 10, 1, 34, 35, 2, 1, 255, 38, 15, 6, 4, 3],\n",
       " [31, 9, 30, 128, 5, 28, 1, 98, 60, 17, 256, 257, 15],\n",
       " [7, 8, 1, 56, 2, 5, 11, 1, 258, 259, 17, 260, 104, 15],\n",
       " [23, 20, 10, 1, 5, 65, 2, 1, 261, 17, 262, 38, 15, 6, 4, 3],\n",
       " [47, 1, 37],\n",
       " [129, 130, 11, 47, 1, 37],\n",
       " [47, 4],\n",
       " [47, 4],\n",
       " [263, 21, 4],\n",
       " [4, 131],\n",
       " [9, 30, 47, 1, 37, 21, 4, 3],\n",
       " [7, 14, 1, 65, 2, 132, 4, 84, 37],\n",
       " [23, 20, 10, 1, 264, 265, 2, 4, 84, 37],\n",
       " [8, 18, 46, 132, 131, 2, 1, 37, 21, 4, 3],\n",
       " [9, 19, 22, 32, 29, 1, 129, 130, 11, 47, 1, 37, 21, 4, 3],\n",
       " [266, 267, 133],\n",
       " [133, 16],\n",
       " [268],\n",
       " [269],\n",
       " [31, 9, 30, 134, 11, 135, 136, 12, 137, 6, 4, 3],\n",
       " [23, 20, 10, 1, 15, 48, 24, 6, 4, 3],\n",
       " [7, 8, 1, 35, 2, 15, 48, 28, 1, 270, 271],\n",
       " [9, 19, 22, 16, 29, 1, 34, 2, 15, 48],\n",
       " [31, 49, 1, 15, 48, 24, 272, 6, 4, 3],\n",
       " [134, 11, 135, 136, 12, 137],\n",
       " [15, 48, 24],\n",
       " [48, 24],\n",
       " [15, 48],\n",
       " [5, 25],\n",
       " [25, 2, 13],\n",
       " [5, 25],\n",
       " [25, 21, 5],\n",
       " [273, 21, 5],\n",
       " [7, 14, 1, 5, 25, 6, 4, 3],\n",
       " [9, 19, 22, 16, 10, 1, 5, 25, 126],\n",
       " [23, 20, 10, 1, 117, 2, 5, 6, 4, 3],\n",
       " [7, 14, 1, 274, 275, 2, 1, 5, 25],\n",
       " [22, 32, 29, 31, 11, 118, 1, 5, 25, 6, 4, 3],\n",
       " [31, 276, 99, 49, 1, 3, 37, 277],\n",
       " [23, 20, 10, 1, 278, 279, 99, 21, 4, 3],\n",
       " [7, 14, 1, 138, 21, 1, 37, 6, 4, 3],\n",
       " [22, 32, 29, 1, 99, 280, 81, 1, 3, 281],\n",
       " [9, 19, 282, 16, 10, 1, 37, 138, 17, 283, 6, 4, 3]]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "04ifvmR8euhB",
    "outputId": "46b73bef-a529-415a-af49-8683567286b5"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "no of unique words :  278\n",
      "output length :  22\n"
     ]
    }
   ],
   "source": [
    "voc=len(tokenizer.word_index)\n",
    "print(\"no of unique words : \",voc)\n",
    "output_length = le.classes_.shape[0]\n",
    "print(\"output length : \",output_length)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "id": "bSba3qFhfEEK"
   },
   "outputs": [],
   "source": [
    "i=Input(shape=(input_shape,))\n",
    "x=Embedding(voc+1,10)(i)\n",
    "x=LSTM(10,return_sequences=True)(x)\n",
    "x=Flatten()(x)\n",
    "x=Dense(output_length,activation=\"softmax\")(x)\n",
    "model=Model(i,x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "id": "R5c2DBfLfbjL"
   },
   "outputs": [],
   "source": [
    "model.compile(loss=\"sparse_categorical_crossentropy\",optimizer='adam',metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "MiTWvvGRDXHh",
    "outputId": "762d457b-a262-42fa-ab00-d5cc626100af"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/300\n",
      "6/6 [==============================] - 3s 16ms/step - loss: 3.0892 - accuracy: 0.0909\n",
      "Epoch 2/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 3.0761 - accuracy: 0.0970\n",
      "Epoch 3/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 3.0600 - accuracy: 0.1394\n",
      "Epoch 4/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 3.0387 - accuracy: 0.2000\n",
      "Epoch 5/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 3.0073 - accuracy: 0.2424\n",
      "Epoch 6/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.9693 - accuracy: 0.2606\n",
      "Epoch 7/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.9268 - accuracy: 0.2061\n",
      "Epoch 8/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.8930 - accuracy: 0.2121\n",
      "Epoch 9/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.8786 - accuracy: 0.1273\n",
      "Epoch 10/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.8654 - accuracy: 0.1333\n",
      "Epoch 11/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.8460 - accuracy: 0.1697\n",
      "Epoch 12/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.8257 - accuracy: 0.1879\n",
      "Epoch 13/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.8057 - accuracy: 0.2000\n",
      "Epoch 14/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.7786 - accuracy: 0.2303\n",
      "Epoch 15/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.7515 - accuracy: 0.2182\n",
      "Epoch 16/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.7262 - accuracy: 0.2061\n",
      "Epoch 17/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.6929 - accuracy: 0.2121\n",
      "Epoch 18/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.6568 - accuracy: 0.2061\n",
      "Epoch 19/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.6149 - accuracy: 0.2303\n",
      "Epoch 20/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.5798 - accuracy: 0.2545\n",
      "Epoch 21/300\n",
      "6/6 [==============================] - 0s 18ms/step - loss: 2.5418 - accuracy: 0.2545\n",
      "Epoch 22/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.5046 - accuracy: 0.2545\n",
      "Epoch 23/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.4661 - accuracy: 0.2364\n",
      "Epoch 24/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.4273 - accuracy: 0.2485\n",
      "Epoch 25/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.3995 - accuracy: 0.2485\n",
      "Epoch 26/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.3704 - accuracy: 0.2545\n",
      "Epoch 27/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.3344 - accuracy: 0.2606\n",
      "Epoch 28/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.3024 - accuracy: 0.2788\n",
      "Epoch 29/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.2718 - accuracy: 0.2788\n",
      "Epoch 30/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.2358 - accuracy: 0.2667\n",
      "Epoch 31/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 2.2018 - accuracy: 0.2545\n",
      "Epoch 32/300\n",
      "6/6 [==============================] - 0s 18ms/step - loss: 2.1807 - accuracy: 0.2545\n",
      "Epoch 33/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.1521 - accuracy: 0.2545\n",
      "Epoch 34/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.1213 - accuracy: 0.2970\n",
      "Epoch 35/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 2.0935 - accuracy: 0.3152\n",
      "Epoch 36/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 2.0612 - accuracy: 0.3212\n",
      "Epoch 37/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 2.0286 - accuracy: 0.3576\n",
      "Epoch 38/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 1.9969 - accuracy: 0.3576\n",
      "Epoch 39/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 1.9633 - accuracy: 0.3576\n",
      "Epoch 40/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 1.9283 - accuracy: 0.3697\n",
      "Epoch 41/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.9029 - accuracy: 0.3818\n",
      "Epoch 42/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 1.8629 - accuracy: 0.4121\n",
      "Epoch 43/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 1.8472 - accuracy: 0.3879\n",
      "Epoch 44/300\n",
      "6/6 [==============================] - 0s 21ms/step - loss: 1.7980 - accuracy: 0.4303\n",
      "Epoch 45/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.7696 - accuracy: 0.3879\n",
      "Epoch 46/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 1.7334 - accuracy: 0.4242\n",
      "Epoch 47/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 1.7049 - accuracy: 0.4364\n",
      "Epoch 48/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.6705 - accuracy: 0.4303\n",
      "Epoch 49/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.6459 - accuracy: 0.4303\n",
      "Epoch 50/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 1.6187 - accuracy: 0.4364\n",
      "Epoch 51/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 1.5924 - accuracy: 0.4545\n",
      "Epoch 52/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.5643 - accuracy: 0.4545\n",
      "Epoch 53/300\n",
      "6/6 [==============================] - 0s 18ms/step - loss: 1.5347 - accuracy: 0.4606\n",
      "Epoch 54/300\n",
      "6/6 [==============================] - 0s 18ms/step - loss: 1.5160 - accuracy: 0.4606\n",
      "Epoch 55/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.4893 - accuracy: 0.4848\n",
      "Epoch 56/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 1.4576 - accuracy: 0.4970\n",
      "Epoch 57/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 1.4324 - accuracy: 0.5212\n",
      "Epoch 58/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.4034 - accuracy: 0.5455\n",
      "Epoch 59/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.3980 - accuracy: 0.5515\n",
      "Epoch 60/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 1.3585 - accuracy: 0.5879\n",
      "Epoch 61/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 1.3396 - accuracy: 0.6121\n",
      "Epoch 62/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 1.3159 - accuracy: 0.5576\n",
      "Epoch 63/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 1.2899 - accuracy: 0.5576\n",
      "Epoch 64/300\n",
      "6/6 [==============================] - 0s 22ms/step - loss: 1.2761 - accuracy: 0.6121\n",
      "Epoch 65/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 1.2525 - accuracy: 0.6182\n",
      "Epoch 66/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 1.2227 - accuracy: 0.6121\n",
      "Epoch 67/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 1.2047 - accuracy: 0.6606\n",
      "Epoch 68/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.1843 - accuracy: 0.6121\n",
      "Epoch 69/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.1700 - accuracy: 0.6667\n",
      "Epoch 70/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 1.1554 - accuracy: 0.6788\n",
      "Epoch 71/300\n",
      "6/6 [==============================] - 0s 20ms/step - loss: 1.1385 - accuracy: 0.6727\n",
      "Epoch 72/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 1.1109 - accuracy: 0.6909\n",
      "Epoch 73/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 1.0856 - accuracy: 0.7030\n",
      "Epoch 74/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.0662 - accuracy: 0.6667\n",
      "Epoch 75/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 1.0515 - accuracy: 0.7030\n",
      "Epoch 76/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 1.0435 - accuracy: 0.6909\n",
      "Epoch 77/300\n",
      "6/6 [==============================] - 0s 28ms/step - loss: 1.0313 - accuracy: 0.6788\n",
      "Epoch 78/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.0198 - accuracy: 0.7394\n",
      "Epoch 79/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 1.0019 - accuracy: 0.7212\n",
      "Epoch 80/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.9819 - accuracy: 0.7939\n",
      "Epoch 81/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.9756 - accuracy: 0.7818\n",
      "Epoch 82/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.9625 - accuracy: 0.7273\n",
      "Epoch 83/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.9347 - accuracy: 0.7333\n",
      "Epoch 84/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.9177 - accuracy: 0.7394\n",
      "Epoch 85/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.9078 - accuracy: 0.7273\n",
      "Epoch 86/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.8998 - accuracy: 0.7273\n",
      "Epoch 87/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 0.8851 - accuracy: 0.7939\n",
      "Epoch 88/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.8813 - accuracy: 0.8000\n",
      "Epoch 89/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.8628 - accuracy: 0.7758\n",
      "Epoch 90/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.8741 - accuracy: 0.8303\n",
      "Epoch 91/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.8396 - accuracy: 0.7758\n",
      "Epoch 92/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.8241 - accuracy: 0.8121\n",
      "Epoch 93/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.8098 - accuracy: 0.7818\n",
      "Epoch 94/300\n",
      "6/6 [==============================] - 0s 22ms/step - loss: 0.7987 - accuracy: 0.7758\n",
      "Epoch 95/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.7877 - accuracy: 0.8242\n",
      "Epoch 96/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 0.7757 - accuracy: 0.8000\n",
      "Epoch 97/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.7692 - accuracy: 0.8061\n",
      "Epoch 98/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.7577 - accuracy: 0.7939\n",
      "Epoch 99/300\n",
      "6/6 [==============================] - 0s 18ms/step - loss: 0.7433 - accuracy: 0.8424\n",
      "Epoch 100/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 0.7284 - accuracy: 0.8242\n",
      "Epoch 101/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.7281 - accuracy: 0.8303\n",
      "Epoch 102/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.7301 - accuracy: 0.8848\n",
      "Epoch 103/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.7202 - accuracy: 0.8606\n",
      "Epoch 104/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.6900 - accuracy: 0.8727\n",
      "Epoch 105/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.6900 - accuracy: 0.8788\n",
      "Epoch 106/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.6713 - accuracy: 0.8303\n",
      "Epoch 107/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.6616 - accuracy: 0.8364\n",
      "Epoch 108/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 0.6535 - accuracy: 0.8364\n",
      "Epoch 109/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.6405 - accuracy: 0.8970\n",
      "Epoch 110/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.6374 - accuracy: 0.8909\n",
      "Epoch 111/300\n",
      "6/6 [==============================] - 0s 18ms/step - loss: 0.6304 - accuracy: 0.8667\n",
      "Epoch 112/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.6169 - accuracy: 0.9030\n",
      "Epoch 113/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 0.6103 - accuracy: 0.8909\n",
      "Epoch 114/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.6013 - accuracy: 0.8727\n",
      "Epoch 115/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.6006 - accuracy: 0.8545\n",
      "Epoch 116/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.5822 - accuracy: 0.8909\n",
      "Epoch 117/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.5714 - accuracy: 0.9212\n",
      "Epoch 118/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.5720 - accuracy: 0.8545\n",
      "Epoch 119/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.5574 - accuracy: 0.9152\n",
      "Epoch 120/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.5472 - accuracy: 0.9152\n",
      "Epoch 121/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.5413 - accuracy: 0.9273\n",
      "Epoch 122/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 0.5380 - accuracy: 0.9091\n",
      "Epoch 123/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 0.5283 - accuracy: 0.9030\n",
      "Epoch 124/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.5260 - accuracy: 0.8788\n",
      "Epoch 125/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.5201 - accuracy: 0.9273\n",
      "Epoch 126/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.5027 - accuracy: 0.9333\n",
      "Epoch 127/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.4971 - accuracy: 0.9333\n",
      "Epoch 128/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.5070 - accuracy: 0.9515\n",
      "Epoch 129/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.5045 - accuracy: 0.9030\n",
      "Epoch 130/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.5178 - accuracy: 0.9091\n",
      "Epoch 131/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.4980 - accuracy: 0.9273\n",
      "Epoch 132/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 0.4665 - accuracy: 0.9333\n",
      "Epoch 133/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.4636 - accuracy: 0.9273\n",
      "Epoch 134/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 0.4585 - accuracy: 0.9273\n",
      "Epoch 135/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.4462 - accuracy: 0.9091\n",
      "Epoch 136/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.4418 - accuracy: 0.9333\n",
      "Epoch 137/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.4330 - accuracy: 0.9394\n",
      "Epoch 138/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.4257 - accuracy: 0.9394\n",
      "Epoch 139/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.4240 - accuracy: 0.9455\n",
      "Epoch 140/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.4191 - accuracy: 0.9394\n",
      "Epoch 141/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.4185 - accuracy: 0.9212\n",
      "Epoch 142/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.4064 - accuracy: 0.9455\n",
      "Epoch 143/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.4035 - accuracy: 0.9394\n",
      "Epoch 144/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.3991 - accuracy: 0.9515\n",
      "Epoch 145/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3957 - accuracy: 0.9576\n",
      "Epoch 146/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3896 - accuracy: 0.9576\n",
      "Epoch 147/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3845 - accuracy: 0.9636\n",
      "Epoch 148/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3816 - accuracy: 0.9576\n",
      "Epoch 149/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3744 - accuracy: 0.9576\n",
      "Epoch 150/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3672 - accuracy: 0.9697\n",
      "Epoch 151/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3633 - accuracy: 0.9697\n",
      "Epoch 152/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.3677 - accuracy: 0.9576\n",
      "Epoch 153/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3584 - accuracy: 0.9758\n",
      "Epoch 154/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3530 - accuracy: 0.9636\n",
      "Epoch 155/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3523 - accuracy: 0.9455\n",
      "Epoch 156/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 0.3425 - accuracy: 0.9333\n",
      "Epoch 157/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 0.3396 - accuracy: 0.9333\n",
      "Epoch 158/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 0.3337 - accuracy: 0.9515\n",
      "Epoch 159/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.3294 - accuracy: 0.9455\n",
      "Epoch 160/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3302 - accuracy: 0.9636\n",
      "Epoch 161/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3225 - accuracy: 0.9636\n",
      "Epoch 162/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.3163 - accuracy: 0.9576\n",
      "Epoch 163/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.3136 - accuracy: 0.9697\n",
      "Epoch 164/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.3097 - accuracy: 0.9697\n",
      "Epoch 165/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.3086 - accuracy: 0.9697\n",
      "Epoch 166/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.3057 - accuracy: 0.9697\n",
      "Epoch 167/300\n",
      "6/6 [==============================] - 0s 25ms/step - loss: 0.3074 - accuracy: 0.9576\n",
      "Epoch 168/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 0.3123 - accuracy: 0.9515\n",
      "Epoch 169/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.3069 - accuracy: 0.9515\n",
      "Epoch 170/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 0.2975 - accuracy: 0.9455\n",
      "Epoch 171/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2891 - accuracy: 0.9576\n",
      "Epoch 172/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.2828 - accuracy: 0.9576\n",
      "Epoch 173/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2799 - accuracy: 0.9636\n",
      "Epoch 174/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2730 - accuracy: 0.9758\n",
      "Epoch 175/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.2717 - accuracy: 0.9758\n",
      "Epoch 176/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2699 - accuracy: 0.9636\n",
      "Epoch 177/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.2649 - accuracy: 0.9758\n",
      "Epoch 178/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 0.2610 - accuracy: 0.9697\n",
      "Epoch 179/300\n",
      "6/6 [==============================] - 0s 22ms/step - loss: 0.2593 - accuracy: 0.9697\n",
      "Epoch 180/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.2594 - accuracy: 0.9758\n",
      "Epoch 181/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.2629 - accuracy: 0.9636\n",
      "Epoch 182/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2617 - accuracy: 0.9576\n",
      "Epoch 183/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.2716 - accuracy: 0.9576\n",
      "Epoch 184/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 0.2626 - accuracy: 0.9697\n",
      "Epoch 185/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 0.2463 - accuracy: 0.9758\n",
      "Epoch 186/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2482 - accuracy: 0.9697\n",
      "Epoch 187/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.2381 - accuracy: 0.9576\n",
      "Epoch 188/300\n",
      "6/6 [==============================] - 0s 24ms/step - loss: 0.2373 - accuracy: 0.9576\n",
      "Epoch 189/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 0.2335 - accuracy: 0.9636\n",
      "Epoch 190/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2334 - accuracy: 0.9576\n",
      "Epoch 191/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2263 - accuracy: 0.9576\n",
      "Epoch 192/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.2256 - accuracy: 0.9636\n",
      "Epoch 193/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 0.2206 - accuracy: 0.9758\n",
      "Epoch 194/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2194 - accuracy: 0.9697\n",
      "Epoch 195/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2165 - accuracy: 0.9697\n",
      "Epoch 196/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2124 - accuracy: 0.9697\n",
      "Epoch 197/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.2146 - accuracy: 0.9758\n",
      "Epoch 198/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.2105 - accuracy: 0.9939\n",
      "Epoch 199/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.2068 - accuracy: 0.9939\n",
      "Epoch 200/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.2072 - accuracy: 0.9818\n",
      "Epoch 201/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.2036 - accuracy: 0.9818\n",
      "Epoch 202/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1997 - accuracy: 0.9697\n",
      "Epoch 203/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.2036 - accuracy: 0.9697\n",
      "Epoch 204/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1962 - accuracy: 0.9697\n",
      "Epoch 205/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1952 - accuracy: 0.9697\n",
      "Epoch 206/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1906 - accuracy: 0.9758\n",
      "Epoch 207/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 0.1901 - accuracy: 0.9939\n",
      "Epoch 208/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.1884 - accuracy: 0.9939\n",
      "Epoch 209/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.1851 - accuracy: 0.9939\n",
      "Epoch 210/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1834 - accuracy: 0.9939\n",
      "Epoch 211/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1790 - accuracy: 0.9818\n",
      "Epoch 212/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1800 - accuracy: 0.9879\n",
      "Epoch 213/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1754 - accuracy: 0.9879\n",
      "Epoch 214/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1743 - accuracy: 0.9818\n",
      "Epoch 215/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1707 - accuracy: 0.9758\n",
      "Epoch 216/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1702 - accuracy: 0.9758\n",
      "Epoch 217/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1702 - accuracy: 0.9697\n",
      "Epoch 218/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1698 - accuracy: 0.9758\n",
      "Epoch 219/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1681 - accuracy: 0.9697\n",
      "Epoch 220/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1648 - accuracy: 0.9818\n",
      "Epoch 221/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1622 - accuracy: 0.9939\n",
      "Epoch 222/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1774 - accuracy: 0.9939\n",
      "Epoch 223/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.1760 - accuracy: 0.9939\n",
      "Epoch 224/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 0.1777 - accuracy: 0.9879\n",
      "Epoch 225/300\n",
      "6/6 [==============================] - 0s 25ms/step - loss: 0.1698 - accuracy: 0.9879\n",
      "Epoch 226/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.1562 - accuracy: 0.9939\n",
      "Epoch 227/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 0.1562 - accuracy: 0.9939\n",
      "Epoch 228/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1514 - accuracy: 0.9939\n",
      "Epoch 229/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1517 - accuracy: 0.9879\n",
      "Epoch 230/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 0.1506 - accuracy: 0.9758\n",
      "Epoch 231/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 0.1473 - accuracy: 0.9939\n",
      "Epoch 232/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.1456 - accuracy: 0.9879\n",
      "Epoch 233/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1424 - accuracy: 0.9939\n",
      "Epoch 234/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1433 - accuracy: 0.9939\n",
      "Epoch 235/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1577 - accuracy: 0.9879\n",
      "Epoch 236/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.1557 - accuracy: 0.9879\n",
      "Epoch 237/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1435 - accuracy: 0.9818\n",
      "Epoch 238/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1426 - accuracy: 0.9939\n",
      "Epoch 239/300\n",
      "6/6 [==============================] - 0s 21ms/step - loss: 0.1367 - accuracy: 0.9939\n",
      "Epoch 240/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1341 - accuracy: 0.9939\n",
      "Epoch 241/300\n",
      "6/6 [==============================] - 0s 21ms/step - loss: 0.1331 - accuracy: 0.9939\n",
      "Epoch 242/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 0.1313 - accuracy: 0.9939\n",
      "Epoch 243/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1298 - accuracy: 0.9939\n",
      "Epoch 244/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1277 - accuracy: 0.9939\n",
      "Epoch 245/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 0.1253 - accuracy: 0.9939\n",
      "Epoch 246/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1267 - accuracy: 0.9939\n",
      "Epoch 247/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1238 - accuracy: 0.9939\n",
      "Epoch 248/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.1219 - accuracy: 0.9939\n",
      "Epoch 249/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 0.1206 - accuracy: 0.9939\n",
      "Epoch 250/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.1198 - accuracy: 0.9939\n",
      "Epoch 251/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1184 - accuracy: 0.9939\n",
      "Epoch 252/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 0.1180 - accuracy: 0.9939\n",
      "Epoch 253/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1193 - accuracy: 0.9939\n",
      "Epoch 254/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.1164 - accuracy: 0.9939\n",
      "Epoch 255/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.1155 - accuracy: 0.9879\n",
      "Epoch 256/300\n",
      "6/6 [==============================] - 0s 8ms/step - loss: 0.1158 - accuracy: 0.9879\n",
      "Epoch 257/300\n",
      "6/6 [==============================] - 0s 23ms/step - loss: 0.1121 - accuracy: 0.9939\n",
      "Epoch 258/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.1116 - accuracy: 0.9879\n",
      "Epoch 259/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1100 - accuracy: 0.9939\n",
      "Epoch 260/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 0.1110 - accuracy: 0.9939\n",
      "Epoch 261/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1081 - accuracy: 0.9939\n",
      "Epoch 262/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1081 - accuracy: 0.9939\n",
      "Epoch 263/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.1146 - accuracy: 0.9939\n",
      "Epoch 264/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 0.1185 - accuracy: 0.9939\n",
      "Epoch 265/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1039 - accuracy: 1.0000\n",
      "Epoch 266/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1379 - accuracy: 0.9939\n",
      "Epoch 267/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1233 - accuracy: 0.9939\n",
      "Epoch 268/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.1055 - accuracy: 0.9939\n",
      "Epoch 269/300\n",
      "6/6 [==============================] - 0s 27ms/step - loss: 0.1039 - accuracy: 0.9939\n",
      "Epoch 270/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1043 - accuracy: 0.9939\n",
      "Epoch 271/300\n",
      "6/6 [==============================] - 0s 14ms/step - loss: 0.1026 - accuracy: 0.9939\n",
      "Epoch 272/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 0.0981 - accuracy: 0.9879\n",
      "Epoch 273/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.0971 - accuracy: 0.9939\n",
      "Epoch 274/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.0979 - accuracy: 0.9939\n",
      "Epoch 275/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1014 - accuracy: 0.9939\n",
      "Epoch 276/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1016 - accuracy: 0.9939\n",
      "Epoch 277/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.1074 - accuracy: 0.9939\n",
      "Epoch 278/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.1011 - accuracy: 0.9939\n",
      "Epoch 279/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.0941 - accuracy: 0.9939\n",
      "Epoch 280/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.0921 - accuracy: 0.9939\n",
      "Epoch 281/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.0924 - accuracy: 0.9939\n",
      "Epoch 282/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.0918 - accuracy: 0.9939\n",
      "Epoch 283/300\n",
      "6/6 [==============================] - 0s 18ms/step - loss: 0.0922 - accuracy: 0.9939\n",
      "Epoch 284/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.0924 - accuracy: 0.9939\n",
      "Epoch 285/300\n",
      "6/6 [==============================] - 0s 23ms/step - loss: 0.0891 - accuracy: 0.9939\n",
      "Epoch 286/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.0881 - accuracy: 0.9939\n",
      "Epoch 287/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.0864 - accuracy: 0.9939\n",
      "Epoch 288/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.0850 - accuracy: 0.9879\n",
      "Epoch 289/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.0836 - accuracy: 0.9939\n",
      "Epoch 290/300\n",
      "6/6 [==============================] - 0s 12ms/step - loss: 0.0843 - accuracy: 0.9879\n",
      "Epoch 291/300\n",
      "6/6 [==============================] - 0s 17ms/step - loss: 0.0830 - accuracy: 0.9939\n",
      "Epoch 292/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 0.0828 - accuracy: 0.9939\n",
      "Epoch 293/300\n",
      "6/6 [==============================] - 0s 15ms/step - loss: 0.0813 - accuracy: 0.9939\n",
      "Epoch 294/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.0835 - accuracy: 0.9879\n",
      "Epoch 295/300\n",
      "6/6 [==============================] - 0s 16ms/step - loss: 0.0820 - accuracy: 0.9879\n",
      "Epoch 296/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.0807 - accuracy: 0.9939\n",
      "Epoch 297/300\n",
      "6/6 [==============================] - 0s 11ms/step - loss: 0.0801 - accuracy: 0.9939\n",
      "Epoch 298/300\n",
      "6/6 [==============================] - 0s 13ms/step - loss: 0.0780 - accuracy: 0.9939\n",
      "Epoch 299/300\n",
      "6/6 [==============================] - 0s 10ms/step - loss: 0.0767 - accuracy: 0.9939\n",
      "Epoch 300/300\n",
      "6/6 [==============================] - 0s 19ms/step - loss: 0.0799 - accuracy: 0.9939\n"
     ]
    }
   ],
   "source": [
    "train=model.fit(x_train,y_train,epochs=300)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 447
    },
    "id": "Xle0e_GzDeyN",
    "outputId": "4bcf1d31-cbb6-4c89-d049-2c65867f4709"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x14815e6b8b0>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(train.history['accuracy'],label='training set accuracy')\n",
    "plt.plot(train.history['loss'],label='training set loss')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "JL371UG-EWGC",
    "outputId": "f51ba8c0-9fbd-436d-e6d5-b1d497f219de"
   },
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "YOU :  hi\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 1s 556ms/step\n",
      "CHATBOT :  Hi there! What brings you here?\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "YOU :  thanks\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 0s 24ms/step\n",
      "CHATBOT :  You're welcome! If you need further help, don't hesitate to ask.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "YOU :  how can i get admission into sastra\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 0s 32ms/step\n",
      "CHATBOT :  Admissions to B.Tech. and 5-Year Integrated M.Tech. programs are based on JEE-Main and Class XII scores. There are specific streams for admission. For more details, visit the official admission page on the website.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "YOU :  whats is the admission fee\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 0s 41ms/step\n",
      "CHATBOT :  Branch sliding is based on your academic performance in the first year. Specific criteria are applied for sliding, and it depends on the availability of seats in the desired branch.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "YOU :  what is the fee for admission\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 0s 30ms/step\n",
      "CHATBOT :  The admission fee is approximately 600-700 rupees.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "YOU :  how much land does the sastra has\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 0s 38ms/step\n",
      "CHATBOT :  No, you don't need separate applications for Stream 1 and Stream 2. Use the same application form and provide relevant details for both streams.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "YOU :  sastra collage area\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1/1 [==============================] - 0s 32ms/step\n",
      "CHATBOT :  Glad I could assist! If you have more questions, feel free to reach out.\n"
     ]
    }
   ],
   "source": [
    "import string\n",
    "import random\n",
    "while True:\n",
    "  texts_p=[]\n",
    "  prediction_input=input('YOU : ')\n",
    "  prediction_input=[letters.lower() for letters in prediction_input if letters not in string.punctuation]\n",
    "  prediction_input=''.join(prediction_input)\n",
    "  texts_p.append(prediction_input)\n",
    "  prediction_input = tokenizer.texts_to_sequences(texts_p)\n",
    "  prediction_input=np.array(prediction_input).reshape(-1)\n",
    "  prediction_input=pad_sequences([prediction_input],input_shape)\n",
    "\n",
    "  output=model.predict(prediction_input)\n",
    "  output = output.argmax()\n",
    "\n",
    "  response_tag = le.inverse_transform([output])[0]\n",
    "  print(\"CHATBOT : \",random.choice(responses[response_tag]))\n",
    "  if response_tag == \"farewell\":\n",
    "    break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "UjbiZLEoGWp-"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
